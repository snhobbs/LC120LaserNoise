[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name="lc120_noise"
version="0.1.0"
#dynamic = ["dependencies"]
authors=[
    {name="Simon Hobbs", email='simon.hobbs@electrooptical.net'}]
requires-python='>=3.9'
classifiers=[
        'Development Status :: 2 - Pre-Alpha',
        'Intended Audience :: Developers',
        'Natural Language :: English',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.9',
        'Programming Language :: Python :: 3.10',
        'Programming Language :: Python :: 3.11',
        'Programming Language :: Python :: 3.12',
]
description="Analysis of the current vs temperature stability points of various lasers using the QL03 photoreceiver and the LC120 diode laser driver"
keywords=['lc120_noise', 'pyvisa', 'python', 'laser', 'noise', 'mode hopping', 'electronics']
readme="README.md"

dependencies = [
    'click>=7.0',
    'pandas',
    'numpy',
    'pyvisa'
]

[project.license]
file="LICENSE"
test="GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1"

[project.scripts]
lc120_noise='lc120_noise.cli:main'

[project.urls]
github='https://github.com/snhobbs/LC120LaserNoise.git'

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[tool.hatch.metadata]
allow-direct-references = true

# [tool.setuptools]
# packages=['lc120_noise']

[tool.setuptools.packages.find]
where = ["src"]

# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
python_files = [
    "tests.py",
    "test_*.py",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*.py",
    "staticfiles/*"
]
line-length = 88
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "FA",
  'ISC',
  "ICN",
  "G",
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  # "ARG", # Unused function argument
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  # "NPY",
  # "AIR",
  "PERF",
  # "FURB",
  # "LOG",
  "RUF"
]
ignore = [
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
  "SIM102", # sometimes it's better to nest
  "COM812", # missing-trailing-comma recommended to remove
  "ISC001", # single-line-implicit-string-concatenation recommended to remove
  "E501",   # line too long
  "PD901",  # generic names
  "ERA001", # commented out code
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = true

[tool.pylint.format]
max-line-length = 120

[tool.pylint.TYPECHECK]
signature-mutators = [
    "click.decorators.option",
    "click.decorators.argument",
    "click.decorators.version_option",
    "click.decorators.help_option",
    "click.decorators.pass_context",
    "click.decorators.confirmation_option"
]

[tool.pylint.MESSAGESCONTROL]
disable=["C0415"]
